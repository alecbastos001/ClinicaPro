{"ast":null,"code":"import React,{useState}from'react';import axios from'axios';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function ClinicaProApp(){const[isRecording,setIsRecording]=useState(false);const[anamnese,setAnamnese]=useState('');const[diagnostico,setDiagnostico]=useState('');const[audioBlob,setAudioBlob]=useState(null);let recorder;// Iniciar gravação\nconst startRecording=()=>{navigator.mediaDevices.getUserMedia({audio:true}).then(stream=>{recorder=new MediaRecorder(stream);recorder.start();setIsRecording(true);recorder.ondataavailable=event=>{setAudioBlob(event.data);};}).catch(err=>{alert('Erro ao acessar o microfone: '+err);});};// Parar gravação\nconst stopRecording=()=>{recorder.stop();setIsRecording(false);processAudio();};// Processar o áudio (simulação de envio ao backend)\nconst processAudio=async()=>{const formData=new FormData();formData.append('file',audioBlob);try{const response=await axios.post('https://seu-backend-url/transcribeAudio',formData,{headers:{'Content-Type':'multipart/form-data'}});setAnamnese(response.data.anamnese);setDiagnostico(response.data.diagnostico);}catch(error){console.error('Erro ao processar o áudio',error);}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Sistema de Anamnese por IA\"}),/*#__PURE__*/_jsx(\"button\",{onClick:isRecording?stopRecording:startRecording,children:isRecording?'Parar Gravação':'Iniciar Gravação'}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Status: \",isRecording?'Gravando...':'Aguardando']}),anamnese&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Anamnese Gerada:\"}),/*#__PURE__*/_jsx(\"p\",{children:anamnese})]}),diagnostico&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Diagn\\xF3stico e Tratamento:\"}),/*#__PURE__*/_jsx(\"p\",{children:diagnostico})]})]});}export default ClinicaProApp;","map":{"version":3,"names":["React","useState","axios","jsx","_jsx","jsxs","_jsxs","ClinicaProApp","isRecording","setIsRecording","anamnese","setAnamnese","diagnostico","setDiagnostico","audioBlob","setAudioBlob","recorder","startRecording","navigator","mediaDevices","getUserMedia","audio","then","stream","MediaRecorder","start","ondataavailable","event","data","catch","err","alert","stopRecording","stop","processAudio","formData","FormData","append","response","post","headers","error","console","children","onClick"],"sources":["C:/Users/alecb/Downloads/ClinicaPro/ClinicaPro_V1/src/components/ClinicaProApp.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction ClinicaProApp() {\r\n  const [isRecording, setIsRecording] = useState(false);\r\n  const [anamnese, setAnamnese] = useState('');\r\n  const [diagnostico, setDiagnostico] = useState('');\r\n  const [audioBlob, setAudioBlob] = useState(null);\r\n\r\n  let recorder;\r\n\r\n  // Iniciar gravação\r\n  const startRecording = () => {\r\n    navigator.mediaDevices.getUserMedia({ audio: true }).then(stream => {\r\n      recorder = new MediaRecorder(stream);\r\n      recorder.start();\r\n      setIsRecording(true);\r\n\r\n      recorder.ondataavailable = event => {\r\n        setAudioBlob(event.data);\r\n      };\r\n    }).catch(err => {\r\n      alert('Erro ao acessar o microfone: ' + err);\r\n    });\r\n  };\r\n\r\n  // Parar gravação\r\n  const stopRecording = () => {\r\n    recorder.stop();\r\n    setIsRecording(false);\r\n    processAudio();\r\n  };\r\n\r\n  // Processar o áudio (simulação de envio ao backend)\r\n  const processAudio = async () => {\r\n    const formData = new FormData();\r\n    formData.append('file', audioBlob);\r\n\r\n    try {\r\n      const response = await axios.post('https://seu-backend-url/transcribeAudio', formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data'\r\n        }\r\n      });\r\n\r\n      setAnamnese(response.data.anamnese);\r\n      setDiagnostico(response.data.diagnostico);\r\n\r\n    } catch (error) {\r\n      console.error('Erro ao processar o áudio', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Sistema de Anamnese por IA</h1>\r\n      <button onClick={isRecording ? stopRecording : startRecording}>\r\n        {isRecording ? 'Parar Gravação' : 'Iniciar Gravação'}\r\n      </button>\r\n      <p>Status: {isRecording ? 'Gravando...' : 'Aguardando'}</p>\r\n\r\n      {anamnese && (\r\n        <div>\r\n          <h2>Anamnese Gerada:</h2>\r\n          <p>{anamnese}</p>\r\n        </div>\r\n      )}\r\n\r\n      {diagnostico && (\r\n        <div>\r\n          <h2>Diagnóstico e Tratamento:</h2>\r\n          <p>{diagnostico}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ClinicaProApp;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,CAAAC,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE1B,QAAS,CAAAC,aAAaA,CAAA,CAAG,CACvB,KAAM,CAACC,WAAW,CAAEC,cAAc,CAAC,CAAGR,QAAQ,CAAC,KAAK,CAAC,CACrD,KAAM,CAACS,QAAQ,CAAEC,WAAW,CAAC,CAAGV,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAACW,WAAW,CAAEC,cAAc,CAAC,CAAGZ,QAAQ,CAAC,EAAE,CAAC,CAClD,KAAM,CAACa,SAAS,CAAEC,YAAY,CAAC,CAAGd,QAAQ,CAAC,IAAI,CAAC,CAEhD,GAAI,CAAAe,QAAQ,CAEZ;AACA,KAAM,CAAAC,cAAc,CAAGA,CAAA,GAAM,CAC3BC,SAAS,CAACC,YAAY,CAACC,YAAY,CAAC,CAAEC,KAAK,CAAE,IAAK,CAAC,CAAC,CAACC,IAAI,CAACC,MAAM,EAAI,CAClEP,QAAQ,CAAG,GAAI,CAAAQ,aAAa,CAACD,MAAM,CAAC,CACpCP,QAAQ,CAACS,KAAK,CAAC,CAAC,CAChBhB,cAAc,CAAC,IAAI,CAAC,CAEpBO,QAAQ,CAACU,eAAe,CAAGC,KAAK,EAAI,CAClCZ,YAAY,CAACY,KAAK,CAACC,IAAI,CAAC,CAC1B,CAAC,CACH,CAAC,CAAC,CAACC,KAAK,CAACC,GAAG,EAAI,CACdC,KAAK,CAAC,+BAA+B,CAAGD,GAAG,CAAC,CAC9C,CAAC,CAAC,CACJ,CAAC,CAED;AACA,KAAM,CAAAE,aAAa,CAAGA,CAAA,GAAM,CAC1BhB,QAAQ,CAACiB,IAAI,CAAC,CAAC,CACfxB,cAAc,CAAC,KAAK,CAAC,CACrByB,YAAY,CAAC,CAAC,CAChB,CAAC,CAED;AACA,KAAM,CAAAA,YAAY,CAAG,KAAAA,CAAA,GAAY,CAC/B,KAAM,CAAAC,QAAQ,CAAG,GAAI,CAAAC,QAAQ,CAAC,CAAC,CAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,CAAEvB,SAAS,CAAC,CAElC,GAAI,CACF,KAAM,CAAAwB,QAAQ,CAAG,KAAM,CAAApC,KAAK,CAACqC,IAAI,CAAC,yCAAyC,CAAEJ,QAAQ,CAAE,CACrFK,OAAO,CAAE,CACP,cAAc,CAAE,qBAClB,CACF,CAAC,CAAC,CAEF7B,WAAW,CAAC2B,QAAQ,CAACV,IAAI,CAAClB,QAAQ,CAAC,CACnCG,cAAc,CAACyB,QAAQ,CAACV,IAAI,CAAChB,WAAW,CAAC,CAE3C,CAAE,MAAO6B,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,CAAEA,KAAK,CAAC,CACnD,CACF,CAAC,CAED,mBACEnC,KAAA,QAAAqC,QAAA,eACEvC,IAAA,OAAAuC,QAAA,CAAI,4BAA0B,CAAI,CAAC,cACnCvC,IAAA,WAAQwC,OAAO,CAAEpC,WAAW,CAAGwB,aAAa,CAAGf,cAAe,CAAA0B,QAAA,CAC3DnC,WAAW,CAAG,gBAAgB,CAAG,kBAAkB,CAC9C,CAAC,cACTF,KAAA,MAAAqC,QAAA,EAAG,UAAQ,CAACnC,WAAW,CAAG,aAAa,CAAG,YAAY,EAAI,CAAC,CAE1DE,QAAQ,eACPJ,KAAA,QAAAqC,QAAA,eACEvC,IAAA,OAAAuC,QAAA,CAAI,kBAAgB,CAAI,CAAC,cACzBvC,IAAA,MAAAuC,QAAA,CAAIjC,QAAQ,CAAI,CAAC,EACd,CACN,CAEAE,WAAW,eACVN,KAAA,QAAAqC,QAAA,eACEvC,IAAA,OAAAuC,QAAA,CAAI,8BAAyB,CAAI,CAAC,cAClCvC,IAAA,MAAAuC,QAAA,CAAI/B,WAAW,CAAI,CAAC,EACjB,CACN,EACE,CAAC,CAEV,CAEA,cAAe,CAAAL,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module"}