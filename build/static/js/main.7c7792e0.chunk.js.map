{"version":3,"sources":["components/ClinicaProApp.js","App.js","index.js"],"names":["ClinicaProApp","isRecording","setIsRecording","useState","anamnese","setAnamnese","diagnostico","setDiagnostico","audioBlob","setAudioBlob","recorder","processAudio","async","formData","FormData","append","response","axios","post","headers","data","error","console","_jsxs","children","_jsx","onClick","stopRecording","stop","startRecording","navigator","mediaDevices","getUserMedia","audio","then","stream","MediaRecorder","start","ondataavailable","event","catch","err","alert","App","className","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"mMA8EeA,MA3Ef,WACE,MAAOC,EAAaC,GAAkBC,oBAAS,IACxCC,EAAUC,GAAeF,mBAAS,KAClCG,EAAaC,GAAkBJ,mBAAS,KACxCK,EAAWC,GAAgBN,mBAAS,MAE3C,IAAIO,EAGJ,MAsBMC,EAAeC,UACnB,MAAMC,EAAW,IAAIC,SACrBD,EAASE,OAAO,OAAQP,GAExB,IACE,MAAMQ,QAAiBC,IAAMC,KAAK,0CAA2CL,EAAU,CACrFM,QAAS,CACP,eAAgB,yBAIpBd,EAAYW,EAASI,KAAKhB,UAC1BG,EAAeS,EAASI,KAAKd,YAE/B,CAAE,MAAOe,GACPC,QAAQD,MAAM,+BAA6BA,EAC7C,GAGF,OACEE,eAAA,OAAAC,SAAA,CACEC,cAAA,MAAAD,SAAI,+BACJC,cAAA,UAAQC,QAASzB,EA7BC0B,KACpBjB,EAASkB,OACT1B,GAAe,GACfS,GAAc,EAlBOkB,KACrBC,UAAUC,aAAaC,aAAa,CAAEC,OAAO,IAAQC,MAAKC,IACxDzB,EAAW,IAAI0B,cAAcD,GAC7BzB,EAAS2B,QACTnC,GAAe,GAEfQ,EAAS4B,gBAAkBC,IACzB9B,EAAa8B,EAAMnB,KAAK,CACzB,IACAoB,OAAMC,IACPC,MAAM,gCAAkCD,EAAI,GAC5C,EAiC8DjB,SAC3DvB,EAAc,uBAAmB,2BAEpCsB,eAAA,KAAAC,SAAA,CAAG,WAASvB,EAAc,cAAgB,gBAEzCG,GACCmB,eAAA,OAAAC,SAAA,CACEC,cAAA,MAAAD,SAAI,qBACJC,cAAA,KAAAD,SAAIpB,OAIPE,GACCiB,eAAA,OAAAC,SAAA,CACEC,cAAA,MAAAD,SAAI,iCACJC,cAAA,KAAAD,SAAIlB,SAKd,ECjEeqC,MARf,WACE,OACElB,cAAA,OAAKmB,UAAU,MAAKpB,SAClBC,cAACzB,EAAa,KAGpB,ECJA6C,IAASC,OACPrB,cAACsB,IAAMC,WAAU,CAAAxB,SACfC,cAACkB,EAAG,MAENM,SAASC,eAAe,Q","file":"static/js/main.7c7792e0.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction ClinicaProApp() {\r\n  const [isRecording, setIsRecording] = useState(false);\r\n  const [anamnese, setAnamnese] = useState('');\r\n  const [diagnostico, setDiagnostico] = useState('');\r\n  const [audioBlob, setAudioBlob] = useState(null);\r\n\r\n  let recorder;\r\n\r\n  // Iniciar gravação\r\n  const startRecording = () => {\r\n    navigator.mediaDevices.getUserMedia({ audio: true }).then(stream => {\r\n      recorder = new MediaRecorder(stream);\r\n      recorder.start();\r\n      setIsRecording(true);\r\n\r\n      recorder.ondataavailable = event => {\r\n        setAudioBlob(event.data);\r\n      };\r\n    }).catch(err => {\r\n      alert('Erro ao acessar o microfone: ' + err);\r\n    });\r\n  };\r\n\r\n  // Parar gravação\r\n  const stopRecording = () => {\r\n    recorder.stop();\r\n    setIsRecording(false);\r\n    processAudio();\r\n  };\r\n\r\n  // Processar o áudio (simulação de envio ao backend)\r\n  const processAudio = async () => {\r\n    const formData = new FormData();\r\n    formData.append('file', audioBlob);\r\n\r\n    try {\r\n      const response = await axios.post('https://seu-backend-url/transcribeAudio', formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data'\r\n        }\r\n      });\r\n\r\n      setAnamnese(response.data.anamnese);\r\n      setDiagnostico(response.data.diagnostico);\r\n\r\n    } catch (error) {\r\n      console.error('Erro ao processar o áudio', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Sistema de Anamnese por IA</h1>\r\n      <button onClick={isRecording ? stopRecording : startRecording}>\r\n        {isRecording ? 'Parar Gravação' : 'Iniciar Gravação'}\r\n      </button>\r\n      <p>Status: {isRecording ? 'Gravando...' : 'Aguardando'}</p>\r\n\r\n      {anamnese && (\r\n        <div>\r\n          <h2>Anamnese Gerada:</h2>\r\n          <p>{anamnese}</p>\r\n        </div>\r\n      )}\r\n\r\n      {diagnostico && (\r\n        <div>\r\n          <h2>Diagnóstico e Tratamento:</h2>\r\n          <p>{diagnostico}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ClinicaProApp;\r\n","import React from 'react';\r\nimport ClinicaProApp from './components/ClinicaProApp';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <ClinicaProApp />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}